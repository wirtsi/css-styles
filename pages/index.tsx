import { useState } from "react";
import Counter from "../components/Counter";
import Icon from "../components/Icon";
import Head from "next/head";
import classnames from "classnames";
import { FlatBox } from "../components/FlatBox";
import { Radio } from "../components/Radio";
import { Logo } from "../components/Logo";
import { buttonColor } from "../styles/variables";
import { themes } from "../styles/variables";
import Image from "next/image";

import css from "styled-jsx/css";

const { className: styleOverride, styles } = css.resolve`
  font-size: 24px;
  color: ${buttonColor};
`;

const getThemeStyles = (theme: string) => css.resolve`
  background: ${themes[theme].bg};
  color: ${themes[theme].color};
  width: 100vw;
  height: 100vh;
`;

export default function Home() {
  const [theme, setTheme] = useState("light");

  const changeTheme = (theme: string) => {
    setTheme(theme);
  };

  return (
    <div>
      <div className={getThemeStyles(theme).className}>
        <Head>
          <title>SCSS Modules with crazy theme switching</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link
            rel="stylesheet"
            href="https://shop-common-cdn-prod.mediazs.com/shop-icon-fonts/v5/css/shop-icon-fonts.css"
          />
        </Head>
        <header>
          <FlatBox variant="grey">
            <form>
              <Radio
                id="light"
                checked={theme === "light"}
                onChange={(evt) => changeTheme(evt.target.id)}
              >
                Light
              </Radio>
              <Radio
                id="dark"
                checked={theme == "dark"}
                onChange={(evt) => changeTheme(evt.target.id)}
              >
                Dark
              </Radio>
            </form>
            <Logo>
              <Image src={themes[theme].logo} alt="Logo" />
            </Logo>
          </FlatBox>
        </header>

        <main style={{ margin: 16 }}>
          <Counter
            minusAriaLabel="Minus"
            plusAriaLabel="Plus"
            inputAriaLabel="Input"
            onKeyUp={() => console.log("Changed")}
            onQuantityModified={() => console.log("bar")}
          />
        </main>

        <footer>
          With styled jsx variables are just JS variables&nbsp;
          <Icon className={classnames("v5-icon--eye-mid", styleOverride)}>
            {styles}
          </Icon>
        </footer>
      {getThemeStyles(theme).styles}
      </div>
    </div>
  );
}
